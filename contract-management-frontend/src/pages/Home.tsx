import { useState, useEffect, useCallback } from "react";
import { getTemplates, deleteTemplate } from "../api";
import TemplateList from "../components/TemplateList";
import Toast, { notifySuccess, notifyError } from "../components/ToastProvider";

const DEBUG_MODE = import.meta.env.VITE_DEBUG_MODE === "on"; // –ß–∏—Ç–∞–µ–º DEBUG_MODE

const Home = () => {
  const [templates, setTemplates] = useState<any[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    const fetchTemplates = async () => {
      try {
        if (DEBUG_MODE) console.log("üì° [API] –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...");
        const data = await getTemplates();
        setTemplates(data);
        notifySuccess("üìã –®–∞–±–ª–æ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ");
        if (DEBUG_MODE) console.log("‚úÖ [API] –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã:", data);
      } catch (err: any) {
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
        notifyError(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤: ${err.message}`);
        console.error("‚ùå [API ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤:", err);
      } finally {
        setIsLoading(false);
      }
    };
    fetchTemplates();
  }, []);

  // üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π `handleDelete` —Å API response code –∏ `toast`
  const handleDelete = useCallback(async (id: number) => {
    try {
      if (DEBUG_MODE) console.log("üóë [API] –£–¥–∞–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞:", id);
  
      // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π —à–∞–±–ª–æ–Ω –≤ —Å–ø–∏—Å–∫–µ
      const template = templates.find((t) => t.id === id);
      if (!template) {
        notifyError("‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        console.error("‚ùå [API ERROR] –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω!");
        return;
      }
  
      // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —à–∞–±–ª–æ–Ω–∞ –µ—Å—Ç—å `type` –∏ `display_name`
      if (!template.type || !template.display_name) {
        notifyError("‚ö†Ô∏è –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ `type` –∏–ª–∏ `display_name`.");
        console.error("‚ö†Ô∏è [API ERROR] –ù–µ—Ç `type` –∏–ª–∏ `display_name` —É —à–∞–±–ª–æ–Ω–∞:", template);
        return;
      }
  
      console.log("üì§ [API] –ü–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º —à–∞–±–ª–æ–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ:", template);
  
      // ‚úÖ –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
      await deleteTemplate(template.type, template.display_name);
  
      // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º UI –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
      setTemplates((prev) => prev.filter((t) => t.id !== id));
      notifySuccess(`üóë –®–∞–±–ª–æ–Ω "${template.display_name}" —É–¥–∞–ª—ë–Ω`);
      if (DEBUG_MODE) console.log("‚úÖ [API] –®–∞–±–ª–æ–Ω —É–¥–∞–ª—ë–Ω:", template);
    } catch (err: any) {
      notifyError(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: ${err.message}`);
      console.error("‚ùå [API ERROR] –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", err);
    }
  }, [templates]);
  

  if (isLoading) return <p className="text-center">‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p className="text-center text-red-500">‚ùå {error}</p>;

  return (
    <div className="container mx-auto p-6">
      <h1 className="text-2xl font-bold">üìã –°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤</h1>
      <TemplateList templates={templates} onDelete={handleDelete} />
      <Toast /> {/* üî• –í–∫–ª—é—á–∞–µ–º ToastContainer –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
    </div>
  );
};

export default Home;
