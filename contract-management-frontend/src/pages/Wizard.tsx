import { useState } from "react";
import WizardStep from "../components/WizardStep";
import FileUploader from "../components/FileUploader";
import DynamicFields from "../components/DynamicFields";
import { notifySuccess, notifyError } from "../components/ToastProvider";

const API_URL = import.meta.env.VITE_API_URL || "http://localhost:8000";

const Wizard = () => {
  const [step, setStep] = useState(1);
  const [file, setFile] = useState<File | null>(null);
  const [templateType, setTemplateType] = useState<string>("");
  const [displayName, setDisplayName] = useState<string>("");
  const [dynamicFields, setDynamicFields] = useState<string[]>([""]);
  const [isUploading, setUploading] = useState(false);

  // üî• –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –ø–æ–ª–µ–π –¥–ª—è —à–∞–±–ª–æ–Ω–∞
  const transformFieldName = (name: string) => {
    return `{{${name.replace(/\s+/g, "_").toLowerCase()}}}`;
  };

  // üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  const generateInstructionText = () => {
    return `
      üìå **–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω?**
      1Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –≤ —à–∞–±–ª–æ–Ω —Å–ª–µ–¥—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–π:
      ${dynamicFields.map(field => `- ${field} ‚Üí ${transformFieldName(field)}`).join("\n")}
      
      2Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –µ–≥–æ –≤ —Å–∏—Å—Ç–µ–º—É.
    `;
  };
  
  // üöÄ **–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞**
  const handleUpload = async () => {
    if (!file || !templateType || !displayName) {
      notifyError("‚ùå –í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!");
      return;
    }
  
    setUploading(true);
  
    // üîç **–§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π**
    const transformedFields = dynamicFields.reduce((acc, field) => {
      acc[transformFieldName(field)] = field;
      return acc;
    }, {} as Record<string, string>);
  
    console.log("üîπ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:", transformedFields);
  
    const formData = new FormData();
    formData.append("file", file);
    formData.append("template_type", templateType);
    formData.append("display_name", displayName);
  
    // üìå **–ü–µ—Ä–µ–¥–∞—ë–º `fields` –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ**
    formData.append("fields", JSON.stringify(Object.values(transformedFields)));
  
    console.log("üì§ [UPLOAD] –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:", {
      template_type: templateType,
      display_name: displayName,
      fields: transformedFields,
      file: file.name
    });
  
    try {
      console.log(`üì§ [UPLOAD] –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞: ${API_URL}/templates/upload`);
  
      const response = await fetch(`${API_URL}/templates/upload`, {
        method: "POST",
        body: formData,
      });
  
      console.log("üì• [UPLOAD] –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.status, response.statusText);
  
      if (!response.ok) {
        const errorText = await response.text();
        throw new Error(`–û—à–∏–±–∫–∞ ${response.status}: ${errorText}`);
      }
  
      const data = await response.json();
      notifySuccess(`‚úÖ –®–∞–±–ª–æ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω: ${data.display_name}`);
  
      console.log("‚úÖ [UPLOAD SUCCESS] –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
    } catch (error: any) {
      console.error("üö® [UPLOAD ERROR]", error);
      notifyError(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message || "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!"}`);
    } finally {
      setUploading(false);
    }
  };
  
  

  return (
    <div className="container mx-auto p-6">
      {/* üîπ –ü–µ—Ä–≤—ã–π —à–∞–≥ - –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ + –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –ø–æ–ª–µ–π */}
      {step === 1 && (
        <WizardStep step={1}>
          <h2 className="text-xl font-bold">üìå –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞</h2>
          <p className="text-sm mt-2">
            –í —ç—Ç–æ–º –º–∞—Å—Ç–µ—Ä–µ –≤—ã —Å–æ–∑–¥–∞–¥–∏—Ç–µ —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –ø–æ–ª—è–º–∏.
            –£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —á–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–Ω—ã –∑–∞–º–µ–Ω—è—Ç—å—Å—è –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è.
            –ù–∞–ø—Ä–∏–º–µ—Ä, <b>"–î–∞—Ç–∞ –¥–æ–≥–æ–≤–æ—Ä–∞"</b> –±—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ <b>{'{{–¥–∞—Ç–∞_–¥–æ–≥–æ–≤–æ—Ä–∞}}'}</b>.
          </p>

          {/* üî• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –ø–æ–ª—è–º–∏ */}
          <DynamicFields fields={dynamicFields} setFields={setDynamicFields} />

          <button 
            onClick={() => setStep(2)} 
            className="w-full bg-blue-500 text-white p-3 mt-4 rounded"
          >
            –î–∞–ª–µ–µ ‚û°Ô∏è
          </button>
        </WizardStep>
      )}

      {/* üîπ –í—Ç–æ—Ä–æ–π —à–∞–≥ - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —à–∞–±–ª–æ–Ω–∞ */}
      {step === 2 && (
        <WizardStep step={2}>
          <h2 className="text-xl font-bold">üìë –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h2>
          <p className="text-sm mt-2">
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤–∞—à –¥–æ–∫—É–º–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∏–∂–µ:
          </p>
          <pre className="text-sm bg-gray-800 text-green-400 p-4 rounded">
            {generateInstructionText()}
          </pre>
          
          <button 
            onClick={() => setStep(3)} 
            className="w-full bg-blue-500 text-white p-3 mt-4 rounded"
          >
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°Ô∏è
          </button>
        </WizardStep>
      )}

      {/* üîπ –¢—Ä–µ—Ç–∏–π —à–∞–≥ - –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞ */}
      {step === 3 && (
        <WizardStep step={3}>
          <h2 className="text-xl font-bold">üì§ –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–∞</h2>
          <FileUploader onFileUpload={setFile} />

          <input
            type="text"
            placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞"
            value={displayName}
            onChange={(e) => setDisplayName(e.target.value)}
            className="w-full border p-2 mt-2 rounded"
          />

          <select
            value={templateType}
            onChange={(e) => setTemplateType(e.target.value)}
            className="w-full border p-2 mt-2 rounded"
          >
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —à–∞–±–ª–æ–Ω–∞</option>
            <option value="contract">–î–æ–≥–æ–≤–æ—Ä</option>
            <option value="specification">–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è</option>
            <option value="addendum">–î–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</option>
          </select>

          {/* üî• –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */}
          <button
            onClick={handleUpload}
            className={`w-full text-white p-2 mt-4 rounded ${
              isUploading ? "bg-gray-400 cursor-not-allowed" : "bg-green-500"
            }`}
            disabled={isUploading}
          >
            {isUploading ? "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..." : "‚úÖ –ó–∞–≥—Ä—É–∑–∏—Ç—å"}
          </button>
        </WizardStep>
      )}
    </div>
  );
};

export default Wizard;
