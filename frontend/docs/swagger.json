{
  "openapi": "3.1.0",
  "info": {
    "title": "Самый Крутой Бэк",
    "description": "Бэкэнд для управления договорами, счетами, платежами и шаблонами",
    "version": "1.0.0"
  },
  "paths": {
    "/contracts/": {
      "post": {
        "tags": ["Contracts"],
        "summary": "Create New Contract",
        "description": "Создать новый контракт.",
        "operationId": "create_new_contract_contracts__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContractCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContractResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}": {
      "get": {
        "tags": ["Contracts"],
        "summary": "Get Contract Detail",
        "description": "Получить детали контракта.",
        "operationId": "get_contract_detail_contracts__contract_id__get",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ContractResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}/addendums/": {
      "post": {
        "tags": ["Addendums"],
        "summary": "Create New Addendum",
        "description": "Создать новое дополнительное соглашение.",
        "operationId": "create_new_addendum_contracts__contract_id__addendums__post",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddendumCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AddendumResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Addendums"],
        "summary": "List Addendums",
        "description": "Получить список дополнительных соглашений.",
        "operationId": "list_addendums_contracts__contract_id__addendums__get",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AddendumResponse" },
                  "title": "Response List Addendums Contracts  Contract Id  Addendums  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}/addendums/{addendum_id}": {
      "delete": {
        "tags": ["Addendums"],
        "summary": "Remove Addendum",
        "description": "Удалить дополнительное соглашение.",
        "operationId": "remove_addendum_contracts__contract_id__addendums__addendum_id__delete",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          },
          {
            "name": "addendum_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Addendum Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/stats/total-contracts": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Total Contracts",
        "description": "Получить общую сумму контрактов.",
        "operationId": "total_contracts_stats_total_contracts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/stats/total-addendums": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Total Addendums",
        "description": "Получить общую сумму дополнительных соглашений.",
        "operationId": "total_addendums_stats_total_addendums_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/contracts/{contract_id}/specifications/": {
      "post": {
        "tags": ["Specifications"],
        "summary": "Create New Specification",
        "description": "Создать новую спецификацию.",
        "operationId": "create_new_specification_contracts__contract_id__specifications__post",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SpecificationCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}/specifications/contract/{specification_id}": {
      "get": {
        "tags": ["Specifications"],
        "summary": "Get Contract By Specification Endpoint",
        "description": "Получить контракт по спецификации.",
        "operationId": "get_contract_by_specification_endpoint_contracts__contract_id__specifications_contract__specification_id__get",
        "parameters": [
          {
            "name": "specification_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Specification Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}/specifications/{spec_id}": {
      "delete": {
        "tags": ["Specifications"],
        "summary": "Remove Specification",
        "description": "Удалить спецификацию.",
        "operationId": "remove_specification_contracts__contract_id__specifications__spec_id__delete",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          },
          {
            "name": "spec_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Spec Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}/appendices/": {
      "post": {
        "tags": ["Appendices"],
        "summary": "Create New Appendix",
        "description": "Создать новое приложение.",
        "operationId": "create_new_appendix_contracts__contract_id__appendices__post",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AppendixCreate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AppendixResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Appendices"],
        "summary": "List Appendices",
        "description": "Получить список приложений.",
        "operationId": "list_appendices_contracts__contract_id__appendices__get",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/AppendixResponse" },
                  "title": "Response List Appendices Contracts  Contract Id  Appendices  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}/appendices/{appendix_id}": {
      "delete": {
        "tags": ["Appendices"],
        "summary": "Remove Appendix",
        "description": "Удалить приложение.",
        "operationId": "remove_appendix_contracts__contract_id__appendices__appendix_id__delete",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          },
          {
            "name": "appendix_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Appendix Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/exchange-rate/contract/{contract_id}": {
      "put": {
        "tags": ["Exchange Rate"],
        "summary": "Update Contract Rate",
        "description": "Обновить курс валюты в контракте.",
        "operationId": "update_contract_rate_exchange_rate_contract__contract_id__put",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          },
          {
            "name": "new_rate",
            "in": "query",
            "required": true,
            "schema": { "type": "number", "title": "New Rate" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/contracts/{contract_id}/invoices/": {
      "get": {
        "tags": ["Invoices"],
        "summary": "Get Invoices",
        "description": "Получить список инвойсов для контракта.",
        "operationId": "get_invoices_contracts__contract_id__invoices__get",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/InvoiceResponse" },
                  "title": "Response Get Invoices Contracts  Contract Id  Invoices  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/pdf/contract/{contract_id}": {
      "get": {
        "tags": ["PDF Export"],
        "summary": "Export Contract",
        "description": "Генерация контракта в формате PDF или DOCX.",
        "operationId": "export_contract_pdf_contract__contract_id__get",
        "parameters": [
          {
            "name": "contract_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Contract Id" }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Output file format",
              "enum": ["pdf", "docx"],
              "default": "pdf",
              "title": "Format"
            },
            "description": "Output file format"
          },
          {
            "name": "template",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Template file to use",
              "default": "contract_template.docx",
              "title": "Template"
            },
            "description": "Template file to use"
          },
          {
            "name": "exclude_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" },
              "description": "List of fields to exclude",
              "default": [],
              "title": "Exclude Fields"
            },
            "description": "List of fields to exclude"
          }
        ],
        "responses": {
          "200": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/templates/check-status": {
      "get": {
        "tags": ["Templates"],
        "summary": "Check Status",
        "description": "Проверяет, загружены ли шаблоны.\n\n:return: Статус.",
        "operationId": "check_status_templates_check_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/templates/start-setup": {
      "post": {
        "tags": ["Templates"],
        "summary": "Start Setup",
        "description": "Запускает процесс создания шаблонов.\n\n:return: Результат запуска.",
        "operationId": "start_setup_templates_start_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/templates/define-fields": {
      "post": {
        "tags": ["Templates"],
        "summary": "Define Fields",
        "description": "Сохраняет динамические поля.\n\n:param fields: Список полей.\n:return: Подтверждение сохранения.",
        "operationId": "define_fields_templates_define_fields_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": { "type": "string" },
                "type": "array",
                "title": "Fields"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/templates/instruction": {
      "get": {
        "tags": ["Templates"],
        "summary": "Get Instruction",
        "description": "Возвращает список динамических полей для формирования инструкции.\n\n:return: Данные инструкции.",
        "operationId": "get_instruction_templates_instruction_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/templates/upload": {
      "post": {
        "tags": ["Templates"],
        "summary": "Upload Template",
        "description": "Загружает шаблон и сохраняет его в БД с динамическими полями.\n\n:param file: Загружаемый файл.\n:param template_type: Тип шаблона.\n:param display_name: Название шаблона.\n:param fields: Динамические поля.\n:param db: Сессия базы данных.\n:return: Подтверждение загрузки.",
        "operationId": "upload_template_templates_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_template_templates_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/templates/update": {
      "post": {
        "tags": ["Templates"],
        "summary": "Update Template",
        "description": "Обновляет динамические поля и display_name для шаблона.\n\n:param template_id: ID шаблона.\n:param display_name: Новое имя шаблона.\n:param fields: Новый список полей.\n:param db: Сессия базы данных.\n:return: Подтверждение обновления.",
        "operationId": "update_template_templates_update_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_template_templates_update_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/templates/delete": {
      "post": {
        "tags": ["Templates"],
        "summary": "Delete Template",
        "description": "Удаляет шаблон по типу и названию.\n\n:param template_type: Тип шаблона.\n:param display_name: Название шаблона.\n:param db: Сессия базы данных.\n:return: Подтверждение удаления.",
        "operationId": "delete_template_templates_delete_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_template_templates_delete_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/templates/": {
      "get": {
        "tags": ["Templates"],
        "summary": "List Templates",
        "description": "Возвращает список шаблонов с полной информацией из базы данных.\n\n:param db: Сессия базы данных.\n:return: Список шаблонов.",
        "operationId": "list_templates_templates__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/admin/health": {
      "get": {
        "tags": ["Admin"],
        "summary": "Health Check",
        "description": "Проверяет статус сервера.",
        "operationId": "health_check_admin_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/admin/logs": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get Logs",
        "description": "Возвращает последние 10 строк логов.",
        "operationId": "get_logs_admin_logs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/admin/api/stats": {
      "get": {
        "tags": ["Admin"],
        "summary": "Get Api Stats",
        "description": "Возвращает статистику API из `main.py`.",
        "operationId": "get_api_stats_admin_api_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/admin/db/status": {
      "get": {
        "tags": ["Admin"],
        "summary": "Db Status",
        "description": "Проверяет подключение к базе данных.",
        "operationId": "db_status_admin_db_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/admin/config": {
      "get": {
        "tags": ["Admin"],
        "summary": "Server Config",
        "description": "Возвращает текущие переменные окружения и настройки.",
        "operationId": "server_config_admin_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/debug": {
      "get": {
        "summary": "Debug Info",
        "operationId": "debug_info_debug_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddendumCreate": {
        "properties": {
          "addendum_number": { "type": "string", "title": "Addendum Number" },
          "addendum_date": {
            "type": "string",
            "format": "date",
            "title": "Addendum Date"
          },
          "additional_amount": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Additional Amount"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["addendum_number", "addendum_date", "additional_amount"],
        "title": "AddendumCreate"
      },
      "AddendumResponse": {
        "properties": {
          "addendum_number": { "type": "string", "title": "Addendum Number" },
          "addendum_date": {
            "type": "string",
            "format": "date",
            "title": "Addendum Date"
          },
          "additional_amount": {
            "type": "string",
            "title": "Additional Amount"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "id": { "type": "integer", "title": "Id" },
          "contract_id": { "type": "integer", "title": "Contract Id" }
        },
        "type": "object",
        "required": [
          "addendum_number",
          "addendum_date",
          "additional_amount",
          "id",
          "contract_id"
        ],
        "title": "AddendumResponse"
      },
      "AppendixCreate": {
        "properties": {
          "appendix_number": {
            "type": "string",
            "maxLength": 50,
            "title": "Appendix Number"
          },
          "appendix_date": {
            "type": "string",
            "format": "date",
            "title": "Appendix Date"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["appendix_number", "appendix_date"],
        "title": "AppendixCreate"
      },
      "AppendixResponse": {
        "properties": {
          "appendix_number": {
            "type": "string",
            "maxLength": 50,
            "title": "Appendix Number"
          },
          "appendix_date": {
            "type": "string",
            "format": "date",
            "title": "Appendix Date"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "id": { "type": "integer", "title": "Id" },
          "contract_id": { "type": "integer", "title": "Contract Id" }
        },
        "type": "object",
        "required": ["appendix_number", "appendix_date", "id", "contract_id"],
        "title": "AppendixResponse"
      },
      "Body_delete_template_templates_delete_post": {
        "properties": {
          "template_type": { "type": "string", "title": "Template Type" },
          "display_name": { "type": "string", "title": "Display Name" }
        },
        "type": "object",
        "required": ["template_type", "display_name"],
        "title": "Body_delete_template_templates_delete_post"
      },
      "Body_update_template_templates_update_post": {
        "properties": {
          "template_id": { "type": "integer", "title": "Template Id" },
          "display_name": { "type": "string", "title": "Display Name" },
          "fields": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Fields"
          }
        },
        "type": "object",
        "required": ["template_id", "display_name", "fields"],
        "title": "Body_update_template_templates_update_post"
      },
      "Body_upload_template_templates_upload_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" },
          "template_type": { "type": "string", "title": "Template Type" },
          "display_name": { "type": "string", "title": "Display Name" },
          "fields": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Fields"
          }
        },
        "type": "object",
        "required": ["file", "template_type", "display_name", "fields"],
        "title": "Body_upload_template_templates_upload_post"
      },
      "ContractCreate": {
        "properties": {
          "contract_number": {
            "type": "string",
            "maxLength": 50,
            "title": "Contract Number"
          },
          "contract_date": {
            "type": "string",
            "format": "date",
            "title": "Contract Date"
          },
          "valid_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Valid Date"
          },
          "place_of_signing": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Place Of Signing"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "CNY"
          },
          "exchange_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Exchange Rate"
          },
          "supplier_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Name"
          },
          "supplier_representative": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Representative"
          },
          "supplier_address": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Address"
          },
          "supplier_bank": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Bank"
          },
          "supplier_account": {
            "type": "string",
            "maxLength": 50,
            "title": "Supplier Account"
          },
          "buyer_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Buyer Name"
          },
          "buyer_address": {
            "type": "string",
            "maxLength": 255,
            "title": "Buyer Address"
          },
          "buyer_bank": {
            "type": "string",
            "maxLength": 255,
            "title": "Buyer Bank"
          },
          "buyer_account": {
            "type": "string",
            "maxLength": 50,
            "title": "Buyer Account"
          },
          "goods_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Goods Name"
          },
          "quantity": { "type": "integer", "title": "Quantity" },
          "price_per_unit": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Price Per Unit"
          },
          "total_price": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Total Price"
          },
          "payment_date": {
            "type": "string",
            "format": "date",
            "title": "Payment Date"
          },
          "delivery_terms": {
            "type": "string",
            "maxLength": 50,
            "title": "Delivery Terms"
          },
          "claim_period": { "type": "integer", "title": "Claim Period" },
          "response_period": { "type": "integer", "title": "Response Period" }
        },
        "type": "object",
        "required": [
          "contract_number",
          "contract_date",
          "supplier_name",
          "supplier_representative",
          "supplier_address",
          "supplier_bank",
          "supplier_account",
          "buyer_name",
          "buyer_address",
          "buyer_bank",
          "buyer_account",
          "goods_name",
          "quantity",
          "price_per_unit",
          "total_price",
          "payment_date",
          "delivery_terms",
          "claim_period",
          "response_period"
        ],
        "title": "ContractCreate",
        "description": "Использует `ContractBase`, но отдельно определяет ID при создании."
      },
      "ContractResponse": {
        "properties": {
          "contract_number": {
            "type": "string",
            "maxLength": 50,
            "title": "Contract Number"
          },
          "contract_date": {
            "type": "string",
            "format": "date",
            "title": "Contract Date"
          },
          "valid_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Valid Date"
          },
          "place_of_signing": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Place Of Signing"
          },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "CNY"
          },
          "exchange_rate": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Exchange Rate"
          },
          "supplier_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Name"
          },
          "supplier_representative": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Representative"
          },
          "supplier_address": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Address"
          },
          "supplier_bank": {
            "type": "string",
            "maxLength": 255,
            "title": "Supplier Bank"
          },
          "supplier_account": {
            "type": "string",
            "maxLength": 50,
            "title": "Supplier Account"
          },
          "buyer_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Buyer Name"
          },
          "buyer_address": {
            "type": "string",
            "maxLength": 255,
            "title": "Buyer Address"
          },
          "buyer_bank": {
            "type": "string",
            "maxLength": 255,
            "title": "Buyer Bank"
          },
          "buyer_account": {
            "type": "string",
            "maxLength": 50,
            "title": "Buyer Account"
          },
          "goods_name": {
            "type": "string",
            "maxLength": 255,
            "title": "Goods Name"
          },
          "quantity": { "type": "integer", "title": "Quantity" },
          "price_per_unit": { "type": "string", "title": "Price Per Unit" },
          "total_price": { "type": "string", "title": "Total Price" },
          "payment_date": {
            "type": "string",
            "format": "date",
            "title": "Payment Date"
          },
          "delivery_terms": {
            "type": "string",
            "maxLength": 50,
            "title": "Delivery Terms"
          },
          "claim_period": { "type": "integer", "title": "Claim Period" },
          "response_period": { "type": "integer", "title": "Response Period" },
          "id": { "type": "integer", "title": "Id" }
        },
        "type": "object",
        "required": [
          "contract_number",
          "contract_date",
          "supplier_name",
          "supplier_representative",
          "supplier_address",
          "supplier_bank",
          "supplier_account",
          "buyer_name",
          "buyer_address",
          "buyer_bank",
          "buyer_account",
          "goods_name",
          "quantity",
          "price_per_unit",
          "total_price",
          "payment_date",
          "delivery_terms",
          "claim_period",
          "response_period",
          "id"
        ],
        "title": "ContractResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InvoiceResponse": {
        "properties": {
          "invoice_number": {
            "type": "string",
            "maxLength": 50,
            "title": "Invoice Number"
          },
          "invoice_date": {
            "type": "string",
            "format": "date",
            "title": "Invoice Date"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date"
          },
          "total_amount": { "type": "string", "title": "Total Amount" },
          "currency": {
            "type": "string",
            "title": "Currency",
            "default": "CNY"
          },
          "status": {
            "type": "string",
            "maxLength": 20,
            "title": "Status",
            "default": "pending"
          },
          "id": { "type": "integer", "title": "Id" },
          "contract_id": { "type": "integer", "title": "Contract Id" }
        },
        "type": "object",
        "required": [
          "invoice_number",
          "invoice_date",
          "due_date",
          "total_amount",
          "id",
          "contract_id"
        ],
        "title": "InvoiceResponse"
      },
      "SpecificationCreate": {
        "properties": {
          "spec_number": {
            "type": "string",
            "maxLength": 50,
            "title": "Spec Number"
          },
          "spec_date": {
            "type": "string",
            "format": "date",
            "title": "Spec Date"
          },
          "goods_description": {
            "type": "string",
            "maxLength": 255,
            "title": "Goods Description"
          },
          "price": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Price"
          },
          "volume": { "type": "integer", "title": "Volume" },
          "total_amount": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Total Amount"
          }
        },
        "type": "object",
        "required": [
          "spec_number",
          "spec_date",
          "goods_description",
          "price",
          "volume",
          "total_amount"
        ],
        "title": "SpecificationCreate"
      },
      "SpecificationResponse": {
        "properties": {
          "spec_number": {
            "type": "string",
            "maxLength": 50,
            "title": "Spec Number"
          },
          "spec_date": {
            "type": "string",
            "format": "date",
            "title": "Spec Date"
          },
          "goods_description": {
            "type": "string",
            "maxLength": 255,
            "title": "Goods Description"
          },
          "price": { "type": "string", "title": "Price" },
          "volume": { "type": "integer", "title": "Volume" },
          "total_amount": { "type": "string", "title": "Total Amount" },
          "id": { "type": "integer", "title": "Id" },
          "contract_id": { "type": "integer", "title": "Contract Id" }
        },
        "type": "object",
        "required": [
          "spec_number",
          "spec_date",
          "goods_description",
          "price",
          "volume",
          "total_amount",
          "id",
          "contract_id"
        ],
        "title": "SpecificationResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    }
  }
}
