/* tslint:disable */
/* eslint-disable */
/**
 * Самый Крутой Бэк
 * Бэкэнд для управления договорами, счетами, платежами и шаблонами
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InvoiceResponse
 */
export interface InvoiceResponse {
    /**
     * 
     * @type {string}
     * @memberof InvoiceResponse
     */
    invoiceNumber: string;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceResponse
     */
    invoiceDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof InvoiceResponse
     */
    dueDate: Date;
    /**
     * 
     * @type {string}
     * @memberof InvoiceResponse
     */
    totalAmount: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceResponse
     */
    currency?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceResponse
     */
    status?: string;
    /**
     * 
     * @type {number}
     * @memberof InvoiceResponse
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof InvoiceResponse
     */
    contractId: number;
}

/**
 * Check if a given object implements the InvoiceResponse interface.
 */
export function instanceOfInvoiceResponse(value: object): value is InvoiceResponse {
    if (!('invoiceNumber' in value) || value['invoiceNumber'] === undefined) return false;
    if (!('invoiceDate' in value) || value['invoiceDate'] === undefined) return false;
    if (!('dueDate' in value) || value['dueDate'] === undefined) return false;
    if (!('totalAmount' in value) || value['totalAmount'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('contractId' in value) || value['contractId'] === undefined) return false;
    return true;
}

export function InvoiceResponseFromJSON(json: any): InvoiceResponse {
    return InvoiceResponseFromJSONTyped(json, false);
}

export function InvoiceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'invoiceNumber': json['invoice_number'],
        'invoiceDate': (new Date(json['invoice_date'])),
        'dueDate': (new Date(json['due_date'])),
        'totalAmount': json['total_amount'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'status': json['status'] == null ? undefined : json['status'],
        'id': json['id'],
        'contractId': json['contract_id'],
    };
}

export function InvoiceResponseToJSON(json: any): InvoiceResponse {
    return InvoiceResponseToJSONTyped(json, false);
}

export function InvoiceResponseToJSONTyped(value?: InvoiceResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'invoice_number': value['invoiceNumber'],
        'invoice_date': ((value['invoiceDate']).toISOString().substring(0,10)),
        'due_date': ((value['dueDate']).toISOString().substring(0,10)),
        'total_amount': value['totalAmount'],
        'currency': value['currency'],
        'status': value['status'],
        'id': value['id'],
        'contract_id': value['contractId'],
    };
}

