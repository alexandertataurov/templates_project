/* tslint:disable */
/* eslint-disable */
/**
 * Самый Крутой Бэк
 * Бэкэнд для управления договорами, счетами, платежами и шаблонами
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SpecificationResponse
 */
export interface SpecificationResponse {
    /**
     * 
     * @type {string}
     * @memberof SpecificationResponse
     */
    specNumber: string;
    /**
     * 
     * @type {Date}
     * @memberof SpecificationResponse
     */
    specDate: Date;
    /**
     * 
     * @type {string}
     * @memberof SpecificationResponse
     */
    goodsDescription: string;
    /**
     * 
     * @type {string}
     * @memberof SpecificationResponse
     */
    price: string;
    /**
     * 
     * @type {number}
     * @memberof SpecificationResponse
     */
    volume: number;
    /**
     * 
     * @type {string}
     * @memberof SpecificationResponse
     */
    totalAmount: string;
    /**
     * 
     * @type {number}
     * @memberof SpecificationResponse
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof SpecificationResponse
     */
    contractId: number;
}

/**
 * Check if a given object implements the SpecificationResponse interface.
 */
export function instanceOfSpecificationResponse(value: object): value is SpecificationResponse {
    if (!('specNumber' in value) || value['specNumber'] === undefined) return false;
    if (!('specDate' in value) || value['specDate'] === undefined) return false;
    if (!('goodsDescription' in value) || value['goodsDescription'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    if (!('volume' in value) || value['volume'] === undefined) return false;
    if (!('totalAmount' in value) || value['totalAmount'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('contractId' in value) || value['contractId'] === undefined) return false;
    return true;
}

export function SpecificationResponseFromJSON(json: any): SpecificationResponse {
    return SpecificationResponseFromJSONTyped(json, false);
}

export function SpecificationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpecificationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'specNumber': json['spec_number'],
        'specDate': (new Date(json['spec_date'])),
        'goodsDescription': json['goods_description'],
        'price': json['price'],
        'volume': json['volume'],
        'totalAmount': json['total_amount'],
        'id': json['id'],
        'contractId': json['contract_id'],
    };
}

export function SpecificationResponseToJSON(json: any): SpecificationResponse {
    return SpecificationResponseToJSONTyped(json, false);
}

export function SpecificationResponseToJSONTyped(value?: SpecificationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'spec_number': value['specNumber'],
        'spec_date': ((value['specDate']).toISOString().substring(0,10)),
        'goods_description': value['goodsDescription'],
        'price': value['price'],
        'volume': value['volume'],
        'total_amount': value['totalAmount'],
        'id': value['id'],
        'contract_id': value['contractId'],
    };
}

